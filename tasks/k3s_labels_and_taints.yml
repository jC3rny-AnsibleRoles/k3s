---
# [ k3s - tasks/k3s_labels_and_taints.yml ]

# Check kubeconfig file location
- block:
    - name: Check kubeconfig file location
      ansible.builtin.stat:
        path: "{{ k3s_kubeconfig_local_path }}"
      register: k3s_kubeconfig_file

    - ansible.builtin.assert:
        that: k3s_kubeconfig_file.stat.exists
        quiet: true
        msg: "Mandatory variables have to be defined!"

  delegate_to: localhost
  run_once: true
  tags: [ always ]


# Set K3S node labels
- name: Set K3S node labels
  ansible.builtin.command: "kubectl --kubeconfig {{ k3s_kubeconfig_local_path }} label nodes {{ hostvars[inventory_hostname].inventory_hostname_short }} {{ item.name }}={{ item.value }}"
  with_items: "{{ k3s_node_labels }}"
  changed_when: false
  failed_when: false
  become: false
  delegate_to: localhost
  when: k3s_node_labels != []
  tags: [ install-k3s, set-k3s_node_labels ]

- name: Remove K3S node labels
  ansible.builtin.command: "kubectl --kubeconfig {{ k3s_kubeconfig_local_path }} label nodes {{ hostvars[inventory_hostname].inventory_hostname_short }} {{ item.name }}-"
  with_items: "{{ k3s_node_labels }}"
  changed_when: false
  failed_when: false
  become: false
  delegate_to: localhost
  when: k3s_node_labels != []
  tags: [ never, remove-k3s_node_labels ]


# Set K3S node taints
- name: Set K3S node taints
  ansible.builtin.command: "kubectl --kubeconfig {{ k3s_kubeconfig_local_path }} taint nodes {{ hostvars[inventory_hostname].inventory_hostname_short }} {{ item.name }}={{ item.value }}:{{ item.effect }}"
  with_items: "{{ k3s_node_taints }}"
  changed_when: false
  failed_when: false
  become: false
  delegate_to: localhost
  when: k3s_node_taints != []
  tags: [ install-k3s, set-k3s_node_taints ]

- name: Remove K3S node taints
  ansible.builtin.command: "kubectl --kubeconfig {{ k3s_kubeconfig_local_path }} taint nodes {{ hostvars[inventory_hostname].inventory_hostname_short }} {{ item.name }}={{ item.value }}:{{ item.effect }}-"
  with_items: "{{ k3s_node_taints }}"
  changed_when: false
  failed_when: false
  become: false
  delegate_to: localhost
  when: k3s_node_taints != []
  tags: [ never, remove-k3s_node_taints ]
